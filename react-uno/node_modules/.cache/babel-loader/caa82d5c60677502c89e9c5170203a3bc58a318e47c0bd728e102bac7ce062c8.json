{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { drawACard, gameDirection } from './Deck';\nimport Global from './GlobalVars';\nexport function Players() {\n  _s();\n  const [gameState, setGameState] = useState({\n    players,\n    gameTurn,\n    drawStack\n  });\n  const handleBotLogic = () => {\n    let numBotCards = gameState.players[gameState.gameTurn].playerDeck.amtCards;\n    for (let i = 0; i < numBotCards; i++) {\n      if (gameState.players[gameState.gameTurn].playerDeck.isValid(i)) {\n        if (gameState.players[gameState.gameTurn].playerDeck.amtCards === 2) {\n          gameState.players[gameState.gameTurn].unoCall = true;\n        }\n        gameState.players[gameState.gameTurn].playerDeck.playCard(i);\n        setGameState(prev => ({\n          ...prev\n        }));\n        return;\n      }\n    }\n    if (gameState.drawStack.stackAmt !== 0) {\n      drawACard();\n    } else {\n      while (!gameState.players[gameState.gameTurn].playerDeck.playCard(gameState.players[gameState.gameTurn].playerDeck.amtCards - 1)) {\n        drawACard();\n      }\n    }\n    setGameState(prev => ({\n      ...prev\n    }));\n  };\n  const handleRotatePlayers = () => {\n    rotatePlayers();\n    setGameState(prev => ({\n      ...prev,\n      gameTurn\n    }));\n  };\n}\n\n// not originally here from index.js(game.js)\n/* export function play(players, gameTurn) {\r\n\tif (players[gameTurn].isBot) {\r\n\t\tsetTimeout(function () {\r\n\t\t\tfor (let i = 0; i < players.length; i++) {\r\n\t\t\t\tdocument\r\n\t\t\t\t\t.getElementById(players[i].playerDeck.hand.id + \"ID\")\r\n\t\t\t\t\t.childNodes[0].classList.remove(\"activePlayer\");\r\n\t\t\t}\r\n\t\t\tdocument\r\n\t\t\t\t.getElementById(players[gameTurn].playerDeck.hand.id + \"ID\")\r\n\t\t\t\t.childNodes[0].classList.add(\"activePlayer\");\r\n\t\t\tplayers[gameTurn].botLogic();\r\n\t\t}, 1000);\r\n\t} else {\r\n\t\tsetTimeout(function () {\r\n\t\t\tfor (let i = 0; i < players.length; i++) {\r\n\t\t\t\tdocument\r\n\t\t\t\t\t.getElementById(players[i].playerDeck.hand.id + \"ID\")\r\n\t\t\t\t\t.childNodes[0].classList.remove(\"activePlayer\");\r\n\t\t\t}\r\n\t\t\tdocument\r\n\t\t\t\t.getElementById(players[gameTurn].playerDeck.hand.id + \"ID\")\r\n\t\t\t\t.childNodes[0].classList.add(\"activePlayer\");\r\n\t\t}, 1000);\r\n\t}\r\n} */\n_s(Players, \"qBD5tqPqR4y5iBxkW1PsrgRdDWo=\");\n_c = Players;\nvar _c;\n$RefreshReg$(_c, \"Players\");","map":{"version":3,"names":["React","useState","drawACard","gameDirection","Global","Players","_s","gameState","setGameState","players","gameTurn","drawStack","handleBotLogic","numBotCards","playerDeck","amtCards","i","isValid","unoCall","playCard","prev","stackAmt","handleRotatePlayers","rotatePlayers","_c","$RefreshReg$"],"sources":["C:/Users/hjohnston/OneDrive - Neumont College of Computer Science/Documents/GitHub/React_Uno/react-uno/src/Components/Players.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { drawACard, gameDirection } from './Deck';\r\nimport Global from './GlobalVars';\r\n\r\nexport function Players() {\r\n  const [gameState, setGameState] = useState({\r\n    players,\r\n    gameTurn,\r\n    drawStack,\r\n  });\r\n\r\n  const handleBotLogic = () => {\r\n    let numBotCards = gameState.players[gameState.gameTurn].playerDeck.amtCards;\r\n\r\n    for (let i = 0; i < numBotCards; i++) {\r\n      if (gameState.players[gameState.gameTurn].playerDeck.isValid(i)) {\r\n        if (gameState.players[gameState.gameTurn].playerDeck.amtCards === 2) {\r\n          gameState.players[gameState.gameTurn].unoCall = true;\r\n        }\r\n        gameState.players[gameState.gameTurn].playerDeck.playCard(i);\r\n        setGameState((prev) => ({ ...prev }));\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (gameState.drawStack.stackAmt !== 0) {\r\n      drawACard();\r\n    } else {\r\n      while (\r\n        !gameState.players[gameState.gameTurn].playerDeck.playCard(\r\n          gameState.players[gameState.gameTurn].playerDeck.amtCards - 1\r\n        )\r\n      ) {\r\n        drawACard();\r\n      }\r\n    }\r\n\r\n    setGameState((prev) => ({ ...prev }));\r\n  };\r\n\r\n  const handleRotatePlayers = () => {\r\n    rotatePlayers();\r\n    setGameState((prev) => ({\r\n      ...prev,\r\n      gameTurn,\r\n    }));\r\n  };\r\n\r\n}\r\n\r\n// not originally here from index.js(game.js)\r\n/* export function play(players, gameTurn) {\r\n\tif (players[gameTurn].isBot) {\r\n\t\tsetTimeout(function () {\r\n\t\t\tfor (let i = 0; i < players.length; i++) {\r\n\t\t\t\tdocument\r\n\t\t\t\t\t.getElementById(players[i].playerDeck.hand.id + \"ID\")\r\n\t\t\t\t\t.childNodes[0].classList.remove(\"activePlayer\");\r\n\t\t\t}\r\n\t\t\tdocument\r\n\t\t\t\t.getElementById(players[gameTurn].playerDeck.hand.id + \"ID\")\r\n\t\t\t\t.childNodes[0].classList.add(\"activePlayer\");\r\n\t\t\tplayers[gameTurn].botLogic();\r\n\t\t}, 1000);\r\n\t} else {\r\n\t\tsetTimeout(function () {\r\n\t\t\tfor (let i = 0; i < players.length; i++) {\r\n\t\t\t\tdocument\r\n\t\t\t\t\t.getElementById(players[i].playerDeck.hand.id + \"ID\")\r\n\t\t\t\t\t.childNodes[0].classList.remove(\"activePlayer\");\r\n\t\t\t}\r\n\t\t\tdocument\r\n\t\t\t\t.getElementById(players[gameTurn].playerDeck.hand.id + \"ID\")\r\n\t\t\t\t.childNodes[0].classList.add(\"activePlayer\");\r\n\t\t}, 1000);\r\n\t}\r\n} */ \r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,aAAa,QAAQ,QAAQ;AACjD,OAAOC,MAAM,MAAM,cAAc;AAEjC,OAAO,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC;IACzCQ,OAAO;IACPC,QAAQ;IACRC;EACF,CAAC,CAAC;EAEF,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAIC,WAAW,GAAGN,SAAS,CAACE,OAAO,CAACF,SAAS,CAACG,QAAQ,CAAC,CAACI,UAAU,CAACC,QAAQ;IAE3E,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,WAAW,EAAEG,CAAC,EAAE,EAAE;MACpC,IAAIT,SAAS,CAACE,OAAO,CAACF,SAAS,CAACG,QAAQ,CAAC,CAACI,UAAU,CAACG,OAAO,CAACD,CAAC,CAAC,EAAE;QAC/D,IAAIT,SAAS,CAACE,OAAO,CAACF,SAAS,CAACG,QAAQ,CAAC,CAACI,UAAU,CAACC,QAAQ,KAAK,CAAC,EAAE;UACnER,SAAS,CAACE,OAAO,CAACF,SAAS,CAACG,QAAQ,CAAC,CAACQ,OAAO,GAAG,IAAI;QACtD;QACAX,SAAS,CAACE,OAAO,CAACF,SAAS,CAACG,QAAQ,CAAC,CAACI,UAAU,CAACK,QAAQ,CAACH,CAAC,CAAC;QAC5DR,YAAY,CAAEY,IAAI,KAAM;UAAE,GAAGA;QAAK,CAAC,CAAC,CAAC;QACrC;MACF;IACF;IAEA,IAAIb,SAAS,CAACI,SAAS,CAACU,QAAQ,KAAK,CAAC,EAAE;MACtCnB,SAAS,CAAC,CAAC;IACb,CAAC,MAAM;MACL,OACE,CAACK,SAAS,CAACE,OAAO,CAACF,SAAS,CAACG,QAAQ,CAAC,CAACI,UAAU,CAACK,QAAQ,CACxDZ,SAAS,CAACE,OAAO,CAACF,SAAS,CAACG,QAAQ,CAAC,CAACI,UAAU,CAACC,QAAQ,GAAG,CAC9D,CAAC,EACD;QACAb,SAAS,CAAC,CAAC;MACb;IACF;IAEAM,YAAY,CAAEY,IAAI,KAAM;MAAE,GAAGA;IAAK,CAAC,CAAC,CAAC;EACvC,CAAC;EAED,MAAME,mBAAmB,GAAGA,CAAA,KAAM;IAChCC,aAAa,CAAC,CAAC;IACff,YAAY,CAAEY,IAAI,KAAM;MACtB,GAAGA,IAAI;MACPV;IACF,CAAC,CAAC,CAAC;EACL,CAAC;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzBAJ,EAAA,CA/CgBD,OAAO;AAAAmB,EAAA,GAAPnB,OAAO;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}