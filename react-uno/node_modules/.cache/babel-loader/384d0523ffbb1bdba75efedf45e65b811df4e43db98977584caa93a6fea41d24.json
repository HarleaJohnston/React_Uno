{"ast":null,"code":"import { rotatePlayers, play } from \"./Players\";\nimport $ from 'jquery';\nplay();\n/**\r\n * Reverse the direction of player rotation\r\n */\n//Change out any document.getElementById to the react way\nexport function cardReverse(players, gameDirection) {\n  if (players.length == 2) {\n    rotatePlayers();\n  } else {\n    gameDirection = -1 * gameDirection;\n  }\n}\n\n/**\r\n * Skip the next player in rotation\r\n */\nexport function cardSkip() {\n  rotatePlayers();\n}\nexport function cardWild(players, gameTurn, discardPile) {\n  if (players[gameTurn].isBot) {\n    let colorArray = [\"Red\", \"Green\", \"Blue\", \"Yellow\"];\n    let randColor = colorArray[Math.floor(Math.random() * colorArray.length)];\n    discardPile.cards[discardPile.cards.length - 1].color = randColor;\n    let colorChoice = convertColorToHex(randColor);\n    $(\".chosen-wild-card-color .inner\").css(\"background\", colorChoice);\n  } else {\n    document.getElementById(\"overlay\").style.display = \"block\";\n  }\n  return true;\n}\nexport function selectWildColor(color, discardPile, isColorSelected) {\n  discardPile.cards[discardPile.cards.length - 1].color = color;\n  $(\".chosen-wild-card-color .inner\").css(\"background\", convertColorToHex(color));\n  isColorSelected = true;\n  rotatePlayers();\n  play();\n  document.getElementById(\"overlay\").style.display = \"none\";\n}\nexport function cardDraw2(drawStack) {\n  drawStack.stackAmt++;\n  drawStack.cardType = 2;\n  drawStack.cardValue = 10;\n  drawStack.updateStack();\n}\nexport function cardDraw4(drawStack) {\n  drawStack.stackAmt++;\n  drawStack.cardType = 4;\n  drawStack.cardValue = 1;\n  drawStack.updateStack();\n  cardWild();\n}\nexport function convertColorToHex(color) {\n  switch (color) {\n    case \"Red\":\n      return \"#c72a18\";\n    case \"Green\":\n      return \"#18a849\";\n    case \"Blue\":\n      return \"#0063b3\";\n    case \"Yellow\":\n      return \"#e6ca1e\";\n  }\n}","map":{"version":3,"names":["rotatePlayers","play","$","cardReverse","players","gameDirection","length","cardSkip","cardWild","gameTurn","discardPile","isBot","colorArray","randColor","Math","floor","random","cards","color","colorChoice","convertColorToHex","css","document","getElementById","style","display","selectWildColor","isColorSelected","cardDraw2","drawStack","stackAmt","cardType","cardValue","updateStack","cardDraw4"],"sources":["C:/Users/hjohnston/OneDrive - Neumont College of Computer Science/Documents/GitHub/React_Uno/react-uno/src/Components/SpecialCards.js"],"sourcesContent":["import { rotatePlayers, play } from \"./Players\";\r\nimport $ from 'jquery';\r\n\r\nplay()\r\n/**\r\n * Reverse the direction of player rotation\r\n */\r\n//Change out any document.getElementById to the react way\r\nexport function cardReverse(players, gameDirection) {\r\n\tif (players.length == 2) {\r\n\t\trotatePlayers();\r\n\t} else {\r\n\t\tgameDirection = -1 * gameDirection;\r\n\t}\r\n}\r\n\r\n/**\r\n * Skip the next player in rotation\r\n */\r\nexport function cardSkip() {\r\n\trotatePlayers();\r\n}\r\n\r\nexport function cardWild(players, gameTurn, discardPile) {\r\n\tif (players[gameTurn].isBot) {\r\n\t\tlet colorArray = [\"Red\", \"Green\", \"Blue\", \"Yellow\"];\r\n\t\tlet randColor = colorArray[Math.floor(Math.random() * colorArray.length)];\r\n\t\tdiscardPile.cards[discardPile.cards.length - 1].color = randColor;\r\n\t\tlet colorChoice = convertColorToHex(randColor);\r\n\t\t$(\".chosen-wild-card-color .inner\").css(\"background\", colorChoice);\r\n\t} else {\r\n\t\tdocument.getElementById(\"overlay\").style.display = \"block\";\r\n\t}\r\n\treturn true;\r\n}\r\n\r\nexport function selectWildColor(color, discardPile, isColorSelected) {\r\n\tdiscardPile.cards[discardPile.cards.length - 1].color = color;\r\n\t$(\".chosen-wild-card-color .inner\").css(\r\n\t\t\"background\",\r\n\t\tconvertColorToHex(color)\r\n\t);\r\n\tisColorSelected = true;\r\n\trotatePlayers();\r\n\tplay();\r\n\tdocument.getElementById(\"overlay\").style.display = \"none\";\r\n}\r\n\r\nexport function cardDraw2(drawStack) {\r\n\tdrawStack.stackAmt++;\r\n\tdrawStack.cardType = 2;\r\n\tdrawStack.cardValue = 10;\r\n\tdrawStack.updateStack();\r\n}\r\n\r\nexport function cardDraw4(drawStack) {\r\n\tdrawStack.stackAmt++;\r\n\tdrawStack.cardType = 4;\r\n\tdrawStack.cardValue = 1;\r\n\tdrawStack.updateStack();\r\n\tcardWild();\r\n}\r\n\r\nexport function convertColorToHex(color) {\r\n\tswitch (color) {\r\n\t\tcase \"Red\":\r\n\t\t\treturn \"#c72a18\";\r\n\t\tcase \"Green\":\r\n\t\t\treturn \"#18a849\";\r\n\t\tcase \"Blue\":\r\n\t\t\treturn \"#0063b3\";\r\n\t\tcase \"Yellow\":\r\n\t\t\treturn \"#e6ca1e\";\r\n\t}\r\n}\r\n"],"mappings":"AAAA,SAASA,aAAa,EAAEC,IAAI,QAAQ,WAAW;AAC/C,OAAOC,CAAC,MAAM,QAAQ;AAEtBD,IAAI,CAAC,CAAC;AACN;AACA;AACA;AACA;AACA,OAAO,SAASE,WAAWA,CAACC,OAAO,EAAEC,aAAa,EAAE;EACnD,IAAID,OAAO,CAACE,MAAM,IAAI,CAAC,EAAE;IACxBN,aAAa,CAAC,CAAC;EAChB,CAAC,MAAM;IACNK,aAAa,GAAG,CAAC,CAAC,GAAGA,aAAa;EACnC;AACD;;AAEA;AACA;AACA;AACA,OAAO,SAASE,QAAQA,CAAA,EAAG;EAC1BP,aAAa,CAAC,CAAC;AAChB;AAEA,OAAO,SAASQ,QAAQA,CAACJ,OAAO,EAAEK,QAAQ,EAAEC,WAAW,EAAE;EACxD,IAAIN,OAAO,CAACK,QAAQ,CAAC,CAACE,KAAK,EAAE;IAC5B,IAAIC,UAAU,GAAG,CAAC,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,CAAC;IACnD,IAAIC,SAAS,GAAGD,UAAU,CAACE,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGJ,UAAU,CAACN,MAAM,CAAC,CAAC;IACzEI,WAAW,CAACO,KAAK,CAACP,WAAW,CAACO,KAAK,CAACX,MAAM,GAAG,CAAC,CAAC,CAACY,KAAK,GAAGL,SAAS;IACjE,IAAIM,WAAW,GAAGC,iBAAiB,CAACP,SAAS,CAAC;IAC9CX,CAAC,CAAC,gCAAgC,CAAC,CAACmB,GAAG,CAAC,YAAY,EAAEF,WAAW,CAAC;EACnE,CAAC,MAAM;IACNG,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC,CAACC,KAAK,CAACC,OAAO,GAAG,OAAO;EAC3D;EACA,OAAO,IAAI;AACZ;AAEA,OAAO,SAASC,eAAeA,CAACR,KAAK,EAAER,WAAW,EAAEiB,eAAe,EAAE;EACpEjB,WAAW,CAACO,KAAK,CAACP,WAAW,CAACO,KAAK,CAACX,MAAM,GAAG,CAAC,CAAC,CAACY,KAAK,GAAGA,KAAK;EAC7DhB,CAAC,CAAC,gCAAgC,CAAC,CAACmB,GAAG,CACtC,YAAY,EACZD,iBAAiB,CAACF,KAAK,CACxB,CAAC;EACDS,eAAe,GAAG,IAAI;EACtB3B,aAAa,CAAC,CAAC;EACfC,IAAI,CAAC,CAAC;EACNqB,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC,CAACC,KAAK,CAACC,OAAO,GAAG,MAAM;AAC1D;AAEA,OAAO,SAASG,SAASA,CAACC,SAAS,EAAE;EACpCA,SAAS,CAACC,QAAQ,EAAE;EACpBD,SAAS,CAACE,QAAQ,GAAG,CAAC;EACtBF,SAAS,CAACG,SAAS,GAAG,EAAE;EACxBH,SAAS,CAACI,WAAW,CAAC,CAAC;AACxB;AAEA,OAAO,SAASC,SAASA,CAACL,SAAS,EAAE;EACpCA,SAAS,CAACC,QAAQ,EAAE;EACpBD,SAAS,CAACE,QAAQ,GAAG,CAAC;EACtBF,SAAS,CAACG,SAAS,GAAG,CAAC;EACvBH,SAAS,CAACI,WAAW,CAAC,CAAC;EACvBzB,QAAQ,CAAC,CAAC;AACX;AAEA,OAAO,SAASY,iBAAiBA,CAACF,KAAK,EAAE;EACxC,QAAQA,KAAK;IACZ,KAAK,KAAK;MACT,OAAO,SAAS;IACjB,KAAK,OAAO;MACX,OAAO,SAAS;IACjB,KAAK,MAAM;MACV,OAAO,SAAS;IACjB,KAAK,QAAQ;MACZ,OAAO,SAAS;EAClB;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}