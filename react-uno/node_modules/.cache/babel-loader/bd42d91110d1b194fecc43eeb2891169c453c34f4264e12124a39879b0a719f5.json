{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { botNames } from \"./BotNames\";\nimport { Link } from \"react-router-dom\";\nimport { Deck } from \"./Deck\";\nimport { play, Player } from \"./Players\";\nimport $ from \"jquery\";\nimport { selectPlayfieldCard } from \"./Cards\";\nimport Global from \"./GlobalVars\";\nfunction Game() {\n  _s();\n  const [playerName, setPlayerName] = useState(\"TheLegend27\");\n  const [playerAmount, setPlayerAmount] = useState(2);\n  const players = Global.players;\n  const initialCards = Global.initialCards;\n  const gameTurn = Global.gameTurn;\n\n  // Might have to change this\n  $(document).ready(function () {\n    $(document).on(\"click\", \".my-card\", function () {\n      let cardIndex = $(\".my-card\").index(this);\n      players[gameTurn].playerDeck.playCard(cardIndex);\n    });\n  });\n  let discardPile = Global.discardPile;\n  function initializePlayers(bNames) {\n    // fill the players array with 2-4 people or bots (future; currently only allows two players)\n    let seats = [\"BottomSeat\", \"RightSeat\", \"TopSeat\", \"LeftSeat\"];\n    let botNames = bNames;\n    while (players.length < playerAmount) {\n      let seatIndex = Math.round(4 / playerAmount) * players.length;\n      let playerHandDiv = seats[seatIndex];\n      let playerHandLabel = playerHandDiv + \"ID\";\n      let tempDeck;\n      if (players.length == 0) {\n        tempDeck = new Deck(playerHandDiv, false);\n      } else {\n        tempDeck = new Deck(playerHandDiv, true); // set to true to blackout\n      }\n\n      let tempID = document.getElementById(\"playerName\").value;\n      let tempIndex = players.length - 1;\n      let isBot = false;\n      let botIndex = Math.floor(Math.random() * botNames.length);\n      let botName = botNames[botIndex];\n      if (players.length != 0 || tempID == \"Bot\") {\n        tempID = botName;\n        botNames.splice(botIndex, 1);\n        isBot = true;\n      }\n      document.getElementById(playerHandLabel).innerHTML = \"<h3>\" + tempID + \"</h3>\";\n      let tempPlayer = new Player(tempDeck, tempID, tempIndex, isBot, false);\n      players.push(tempPlayer);\n      for (let i = 0; i < initialCards; i++) {\n        players[players.length - 1].playerDeck.drawCard();\n      }\n    }\n    Global.isInitialDraw = false;\n    Global.playerName = playerName;\n    Global.playerAmount = playerAmount;\n    play(players, gameTurn);\n  }\n\n  /**\r\n   * Change the displayed text and call function to randomize playfield card\r\n   */\n  function initializeWindow() {\n    // re-assign global card value to random values\n    selectPlayfieldCard();\n    // Refs Cards.js, Going to have to change this\n    discardPile.reloadHand();\n  }\n  function startGame() {\n    let playerNameInput = document.getElementById(\"playerName\");\n    let playerName = playerNameInput.value;\n    playerNameInput.classList.remove(\"is-valid\");\n    if (playerName.length == 0) {\n      playerNameInput.classList.add(\"is-invalid\");\n      return;\n    }\n    document.getElementById(\"setupGame\").classList.add(\"d-none\");\n    document.getElementById(\"playingField\").classList.remove(\"d-none\");\n    let playerAmtDiv = document.getElementById(\"amtPlayers\");\n    let playerAmt = playerAmtDiv.options[playerAmtDiv.selectedIndex].value;\n    playerAmount = playerAmt;\n    initializeWindow();\n    initializePlayers(botNames);\n  }\n  function callUno() {\n    if (players[gameTurn].playerDeck.amtCards > 2) {\n      players[gameTurn].playerDeck.drawCard();\n      players[gameTurn].playerDeck.drawCard();\n    } else {\n      players[gameTurn].unoCall = true;\n    }\n  }\n  function play(players, gameTurn) {\n    if (players[gameTurn].isBot) {\n      setTimeout(function () {\n        for (let i = 0; i < players.length; i++) {\n          document.getElementById(players[i].playerDeck.hand.id + \"ID\").childNodes[0].classList.remove(\"activePlayer\");\n        }\n        document.getElementById(players[gameTurn].playerDeck.hand.id + \"ID\").childNodes[0].classList.add(\"activePlayer\");\n        players[gameTurn].botLogic();\n      }, 1000);\n    } else {\n      setTimeout(function () {\n        for (let i = 0; i < players.length; i++) {\n          document.getElementById(players[i].playerDeck.hand.id + \"ID\").childNodes[0].classList.remove(\"activePlayer\");\n        }\n        document.getElementById(players[gameTurn].playerDeck.hand.id + \"ID\").childNodes[0].classList.add(\"activePlayer\");\n      }, 1000);\n    }\n  }\n}\n_s(Game, \"J+IodtwwGzGG2w8KvekmYBDbwUE=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","useRef","botNames","Link","Deck","play","Player","$","selectPlayfieldCard","Global","Game","_s","playerName","setPlayerName","playerAmount","setPlayerAmount","players","initialCards","gameTurn","document","ready","on","cardIndex","index","playerDeck","playCard","discardPile","initializePlayers","bNames","seats","length","seatIndex","Math","round","playerHandDiv","playerHandLabel","tempDeck","tempID","getElementById","value","tempIndex","isBot","botIndex","floor","random","botName","splice","innerHTML","tempPlayer","push","i","drawCard","isInitialDraw","initializeWindow","reloadHand","startGame","playerNameInput","classList","remove","add","playerAmtDiv","playerAmt","options","selectedIndex","callUno","amtCards","unoCall","setTimeout","hand","id","childNodes","botLogic","_c","$RefreshReg$"],"sources":["C:/Users/hjohnston/OneDrive - Neumont College of Computer Science/Documents/GitHub/React_Uno/react-uno/src/Components/Game.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { botNames } from \"./BotNames\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Deck } from \"./Deck\";\r\nimport { play, Player } from \"./Players\";\r\nimport $ from \"jquery\";\r\nimport { selectPlayfieldCard } from \"./Cards\";\r\nimport Global from \"./GlobalVars\";\r\n\r\nfunction Game() {\r\n\tconst [playerName, setPlayerName] = useState(\"TheLegend27\");\r\n\tconst [playerAmount, setPlayerAmount] = useState(2);\r\n\r\n\tconst players = Global.players\r\n\tconst initialCards = Global.initialCards\r\n\tconst gameTurn = Global.gameTurn\r\n\r\n\t// Might have to change this\r\n\t$(document).ready(function () {\r\n\t\t$(document).on(\"click\", \".my-card\", function () {\r\n\t\t\tlet cardIndex = $(\".my-card\").index(this);\r\n\t\t\tplayers[gameTurn].playerDeck.playCard(cardIndex);\r\n\t\t});\r\n\t});\r\n\r\n\tlet discardPile = Global.discardPile\r\n\r\n\tfunction initializePlayers(bNames) {\r\n\t\t// fill the players array with 2-4 people or bots (future; currently only allows two players)\r\n\t\tlet seats = [\"BottomSeat\", \"RightSeat\", \"TopSeat\", \"LeftSeat\"];\r\n\t\tlet botNames = bNames;\r\n\r\n\t\twhile (players.length < playerAmount) {\r\n\t\t\tlet seatIndex = Math.round(4 / playerAmount) * players.length;\r\n\t\t\tlet playerHandDiv = seats[seatIndex];\r\n\t\t\tlet playerHandLabel = playerHandDiv + \"ID\";\r\n\r\n\t\t\tlet tempDeck;\r\n\r\n\t\t\tif (players.length == 0) {\r\n\t\t\t\ttempDeck = new Deck(playerHandDiv, false);\r\n\t\t\t} else {\r\n\t\t\t\ttempDeck = new Deck(playerHandDiv, true); // set to true to blackout\r\n\t\t\t}\r\n\r\n\t\t\tlet tempID = document.getElementById(\"playerName\").value;\r\n\r\n\t\t\tlet tempIndex = players.length - 1;\r\n\r\n\t\t\tlet isBot = false;\r\n\r\n\t\t\tlet botIndex = Math.floor(Math.random() * botNames.length);\r\n\t\t\tlet botName = botNames[botIndex];\r\n\r\n\t\t\tif (players.length != 0 || tempID == \"Bot\") {\r\n\t\t\t\ttempID = botName;\r\n\t\t\t\tbotNames.splice(botIndex, 1);\r\n\t\t\t\tisBot = true;\r\n\t\t\t}\r\n\r\n\t\t\tdocument.getElementById(playerHandLabel).innerHTML =\r\n\t\t\t\t\"<h3>\" + tempID + \"</h3>\";\r\n\r\n\t\t\tlet tempPlayer = new Player(tempDeck, tempID, tempIndex, isBot, false);\r\n\r\n\t\t\tplayers.push(tempPlayer);\r\n\r\n\t\t\tfor (let i = 0; i < initialCards; i++) {\r\n\t\t\t\tplayers[players.length - 1].playerDeck.drawCard();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tGlobal.isInitialDraw = false\r\n\t\tGlobal.playerName = playerName;\r\n\t\tGlobal.playerAmount = playerAmount;\r\n\r\n\t\tplay(players, gameTurn);\r\n\t}\r\n\r\n\t/**\r\n\t * Change the displayed text and call function to randomize playfield card\r\n\t */\r\n\tfunction initializeWindow() {\r\n\t\t// re-assign global card value to random values\r\n\t\tselectPlayfieldCard();\r\n\t\t// Refs Cards.js, Going to have to change this\r\n\t\tdiscardPile.reloadHand();\r\n\t}\r\n\r\n\tfunction startGame() {\r\n\t\t\r\n\t\tlet playerNameInput = document.getElementById(\"playerName\");\r\n\t\tlet playerName = playerNameInput.value;\r\n\t\tplayerNameInput.classList.remove(\"is-valid\");\r\n\t\tif (playerName.length == 0) {\r\n\t\t\tplayerNameInput.classList.add(\"is-invalid\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tdocument.getElementById(\"setupGame\").classList.add(\"d-none\");\r\n\t\tdocument.getElementById(\"playingField\").classList.remove(\"d-none\");\r\n\t\tlet playerAmtDiv = document.getElementById(\"amtPlayers\");\r\n\t\tlet playerAmt = playerAmtDiv.options[playerAmtDiv.selectedIndex].value;\r\n\t\tplayerAmount = playerAmt;\r\n\r\n\t\tinitializeWindow();\r\n\t\tinitializePlayers(botNames);\r\n\t}\r\n\r\n\tfunction callUno() {\r\n\t\tif (players[gameTurn].playerDeck.amtCards > 2) {\r\n\t\t\tplayers[gameTurn].playerDeck.drawCard();\r\n\t\t\tplayers[gameTurn].playerDeck.drawCard();\r\n\t\t} else {\r\n\t\t\tplayers[gameTurn].unoCall = true;\r\n\t\t}\r\n\t}\r\n\r\n\t\r\nfunction play(players, gameTurn) {\r\n\tif (players[gameTurn].isBot) {\r\n\t\tsetTimeout(function () {\r\n\t\t\tfor (let i = 0; i < players.length; i++) {\r\n\t\t\t\tdocument\r\n\t\t\t\t\t.getElementById(players[i].playerDeck.hand.id + \"ID\")\r\n\t\t\t\t\t.childNodes[0].classList.remove(\"activePlayer\");\r\n\t\t\t}\r\n\t\t\tdocument\r\n\t\t\t\t.getElementById(players[gameTurn].playerDeck.hand.id + \"ID\")\r\n\t\t\t\t.childNodes[0].classList.add(\"activePlayer\");\r\n\t\t\tplayers[gameTurn].botLogic();\r\n\t\t}, 1000);\r\n\t} else {\r\n\t\tsetTimeout(function () {\r\n\t\t\tfor (let i = 0; i < players.length; i++) {\r\n\t\t\t\tdocument\r\n\t\t\t\t\t.getElementById(players[i].playerDeck.hand.id + \"ID\")\r\n\t\t\t\t\t.childNodes[0].classList.remove(\"activePlayer\");\r\n\t\t\t}\r\n\t\t\tdocument\r\n\t\t\t\t.getElementById(players[gameTurn].playerDeck.hand.id + \"ID\")\r\n\t\t\t\t.childNodes[0].classList.add(\"activePlayer\");\r\n\t\t}, 1000);\r\n\t}\r\n} \r\n}\r\n\r\nexport default Game;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}