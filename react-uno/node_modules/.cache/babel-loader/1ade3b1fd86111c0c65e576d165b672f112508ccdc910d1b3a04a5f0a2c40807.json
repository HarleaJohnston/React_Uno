{"ast":null,"code":"import React, { useState } from 'react';\nexport function Card(color, value) {\n  this.color = color;\n  this.value = value;\n  this.getColorValue = function () {\n    switch (this.color) {\n      case 'Red':\n        return '#A60000';\n      case 'Blue':\n        return '#0000FF';\n      case 'Green':\n        return '#004f19';\n      case 'Yellow':\n        return '#e5bf00';\n      default:\n        return '#333333';\n    }\n  };\n}\n_c = Card;\nexport function drawSpecificCard(players, gameTurn, cardColor, cardValue) {\n  players[gameTurn].playerDeck.drawSpecificCard(cardColor, cardValue);\n}\nexport function removeManyCards(players, gameTurn, numberOfCards) {\n  if (numberOfCards > players[gameTurn].playerDeck.amtCards - 2) {\n    return;\n  }\n  for (let i = 0; i < numberOfCards; i++) {\n    players[gameTurn].playerDeck.removeCard(0);\n  }\n  players[gameTurn].playerDeck.reloadHand();\n}\nexport function drawACard(players, drawStack, gameTurn, rotatePlayers, play) {\n  if (drawStack.stackAmt !== 0) {\n    let drawTimes = drawStack.cardType * drawStack.stackAmt;\n    drawStack.clearVisual();\n    for (let i = 0; i < drawTimes; i++) {\n      players[gameTurn].playerDeck.drawCard();\n    }\n    drawStack.stackAmt = 0;\n    rotatePlayers();\n    play(players, gameTurn);\n  } else if (forcePlay(players, gameTurn)) {\n    let audio = new Audio('error.mp3');\n\n    // audio.play();\n  } else {\n    players[gameTurn].playerDeck.drawCard();\n  }\n}\nexport function selectPlayfieldCard(discard, Card) {\n  let colorArray = ['Red', 'Green', 'Blue', 'Yellow'];\n  let randColor = colorArray[Math.floor(Math.random() * colorArray.length)];\n  let randValue = Math.floor(Math.random() * 10);\n  let tempCard = new Card(randColor, randValue);\n  discard(tempCard);\n}\nexport function discard(card, discardPile) {\n  discardPile.addCard(card);\n  if (discardPile.cards.length > 5) discardPile.removeCard(0);\n}\nexport function forcePlay(players, gameTurn) {\n  for (let i = 0; i < players[gameTurn].playerDeck.cards.length; i++) {\n    if (players[gameTurn].playerDeck.isValid(i)) return true;\n  }\n  return false;\n}\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useState","Card","color","value","getColorValue","_c","drawSpecificCard","players","gameTurn","cardColor","cardValue","playerDeck","removeManyCards","numberOfCards","amtCards","i","removeCard","reloadHand","drawACard","drawStack","rotatePlayers","play","stackAmt","drawTimes","cardType","clearVisual","drawCard","forcePlay","audio","Audio","selectPlayfieldCard","discard","colorArray","randColor","Math","floor","random","length","randValue","tempCard","card","discardPile","addCard","cards","isValid","$RefreshReg$"],"sources":["C:/Users/hjohnston/OneDrive - Neumont College of Computer Science/Documents/GitHub/React_Uno/react-uno/src/Components/Cards.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nexport function Card(color, value) {\r\n  this.color = color;\r\n  this.value = value;\r\n  this.getColorValue = function () {\r\n    switch (this.color) {\r\n      case 'Red':\r\n        return '#A60000';\r\n      case 'Blue':\r\n        return '#0000FF';\r\n      case 'Green':\r\n        return '#004f19';\r\n      case 'Yellow':\r\n        return '#e5bf00';\r\n      default:\r\n        return '#333333';\r\n    }\r\n  };\r\n}\r\n\r\nexport function drawSpecificCard(players, gameTurn, cardColor, cardValue) {\r\n  players[gameTurn].playerDeck.drawSpecificCard(cardColor, cardValue);\r\n}\r\n\r\nexport function removeManyCards(players, gameTurn, numberOfCards) {\r\n  if (numberOfCards > players[gameTurn].playerDeck.amtCards - 2) {\r\n    return;\r\n  }\r\n\r\n  for (let i = 0; i < numberOfCards; i++) {\r\n    players[gameTurn].playerDeck.removeCard(0);\r\n  }\r\n  players[gameTurn].playerDeck.reloadHand();\r\n}\r\n\r\nexport function drawACard(players, drawStack, gameTurn, rotatePlayers, play) {\r\n  if (drawStack.stackAmt !== 0) {\r\n    let drawTimes = drawStack.cardType * drawStack.stackAmt;\r\n    drawStack.clearVisual();\r\n    for (let i = 0; i < drawTimes; i++) {\r\n      players[gameTurn].playerDeck.drawCard();\r\n    }\r\n\r\n    drawStack.stackAmt = 0;\r\n    rotatePlayers();\r\n    play(players, gameTurn);\r\n  } else if (forcePlay(players, gameTurn)) {\r\n    let audio = new Audio('error.mp3');\r\n\r\n    // audio.play();\r\n  } else {\r\n    players[gameTurn].playerDeck.drawCard();\r\n  }\r\n}\r\n\r\nexport function selectPlayfieldCard(discard, Card) {\r\n  let colorArray = ['Red', 'Green', 'Blue', 'Yellow'];\r\n  let randColor = colorArray[Math.floor(Math.random() * colorArray.length)];\r\n  let randValue = Math.floor(Math.random() * 10);\r\n  let tempCard = new Card(randColor, randValue);\r\n\r\n  discard(tempCard);\r\n}\r\n\r\nexport function discard(card, discardPile) {\r\n  discardPile.addCard(card);\r\n  if (discardPile.cards.length > 5) discardPile.removeCard(0);\r\n}\r\n\r\nexport function forcePlay(players, gameTurn) {\r\n  for (let i = 0; i < players[gameTurn].playerDeck.cards.length; i++) {\r\n    if (players[gameTurn].playerDeck.isValid(i)) return true;\r\n  }\r\n  return false;\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}