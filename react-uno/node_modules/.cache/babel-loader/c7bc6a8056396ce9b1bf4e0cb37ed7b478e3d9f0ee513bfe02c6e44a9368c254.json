{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { drawACard } from './Deck';\nfunction Player({\n  deck,\n  id,\n  index,\n  isBot,\n  unoCall\n}) {\n  _s();\n  const [playerDeck, setPlayerDeck] = useState(deck);\n  const botLogic = () => {\n    let numBotCards = playerDeck.amtCards;\n\n    // Bot behavior\n    for (let i = 0; i < numBotCards; i++) {\n      if (playerDeck.isValid(i)) {\n        if (playerDeck.amtCards === 2) {\n          unoCall(true);\n        }\n        playerDeck.playCard(i);\n        setPlayerDeck({\n          ...playerDeck\n        });\n        return;\n      }\n    }\n\n    // Draw a card if the draw stack is not empty\n    if (drawStack.stackAmt !== 0) {\n      drawACard();\n    } else {\n      while (!playerDeck.playCard(playerDeck.amtCards - 1)) {\n        drawACard();\n      }\n    }\n  };\n\n  // Assuming these are global variables\n  let gameTurn = 0;\n  let gameDirection = 1;\n  let drawStack = {\n    stackAmt: 0\n  };\n  function rotatePlayers(players) {\n    gameTurn = gameTurn + gameDirection;\n    if (gameTurn === players.length) {\n      gameTurn = 0;\n    } else if (gameTurn < 0) {\n      gameTurn = players.length - 1;\n    }\n  }\n}\n_s(Player, \"m+x88ojoJh4Gwn/tI+XslRs5gEQ=\");\n_c = Player;\nexport default Players && rotatePlayers;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["React","useState","useEffect","drawACard","Player","deck","id","index","isBot","unoCall","_s","playerDeck","setPlayerDeck","botLogic","numBotCards","amtCards","i","isValid","playCard","drawStack","stackAmt","gameTurn","gameDirection","rotatePlayers","players","length","_c","Players","$RefreshReg$"],"sources":["C:/Users/hjohnston/OneDrive - Neumont College of Computer Science/Documents/GitHub/React_Uno/react-uno/src/Components/Players.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { drawACard } from './Deck';\r\n\r\nfunction Player({ deck, id, index, isBot, unoCall }) {\r\n  const [playerDeck, setPlayerDeck] = useState(deck);\r\n\r\n  const botLogic = () => {\r\n    let numBotCards = playerDeck.amtCards;\r\n\r\n    // Bot behavior\r\n    for (let i = 0; i < numBotCards; i++) {\r\n      if (playerDeck.isValid(i)) {\r\n        if (playerDeck.amtCards === 2) {\r\n          unoCall(true);\r\n        }\r\n        playerDeck.playCard(i);\r\n        setPlayerDeck({ ...playerDeck });\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Draw a card if the draw stack is not empty\r\n    if (drawStack.stackAmt !== 0) {\r\n      drawACard();\r\n    } else {\r\n      while (!playerDeck.playCard(playerDeck.amtCards - 1)) {\r\n        drawACard();\r\n      }\r\n    }\r\n  };\r\n\r\n\t// Assuming these are global variables\r\n\tlet gameTurn = 0;\r\n\tlet gameDirection = 1;\r\n\tlet drawStack = { stackAmt: 0 };\r\n\r\n\tfunction rotatePlayers(players) {\r\n\tgameTurn = gameTurn + gameDirection;\r\n\r\n\tif (gameTurn === players.length) {\r\n\t\tgameTurn = 0;\r\n\t} else if (gameTurn < 0) {\r\n\t\tgameTurn = players.length - 1;\r\n\t}\r\n\t}\r\n\r\n}\r\n\r\nexport default Players && rotatePlayers;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,QAAQ;AAElC,SAASC,MAAMA,CAAC;EAAEC,IAAI;EAAEC,EAAE;EAAEC,KAAK;EAAEC,KAAK;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EACnD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAACI,IAAI,CAAC;EAElD,MAAMQ,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAIC,WAAW,GAAGH,UAAU,CAACI,QAAQ;;IAErC;IACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,WAAW,EAAEE,CAAC,EAAE,EAAE;MACpC,IAAIL,UAAU,CAACM,OAAO,CAACD,CAAC,CAAC,EAAE;QACzB,IAAIL,UAAU,CAACI,QAAQ,KAAK,CAAC,EAAE;UAC7BN,OAAO,CAAC,IAAI,CAAC;QACf;QACAE,UAAU,CAACO,QAAQ,CAACF,CAAC,CAAC;QACtBJ,aAAa,CAAC;UAAE,GAAGD;QAAW,CAAC,CAAC;QAChC;MACF;IACF;;IAEA;IACA,IAAIQ,SAAS,CAACC,QAAQ,KAAK,CAAC,EAAE;MAC5BjB,SAAS,CAAC,CAAC;IACb,CAAC,MAAM;MACL,OAAO,CAACQ,UAAU,CAACO,QAAQ,CAACP,UAAU,CAACI,QAAQ,GAAG,CAAC,CAAC,EAAE;QACpDZ,SAAS,CAAC,CAAC;MACb;IACF;EACF,CAAC;;EAEF;EACA,IAAIkB,QAAQ,GAAG,CAAC;EAChB,IAAIC,aAAa,GAAG,CAAC;EACrB,IAAIH,SAAS,GAAG;IAAEC,QAAQ,EAAE;EAAE,CAAC;EAE/B,SAASG,aAAaA,CAACC,OAAO,EAAE;IAChCH,QAAQ,GAAGA,QAAQ,GAAGC,aAAa;IAEnC,IAAID,QAAQ,KAAKG,OAAO,CAACC,MAAM,EAAE;MAChCJ,QAAQ,GAAG,CAAC;IACb,CAAC,MAAM,IAAIA,QAAQ,GAAG,CAAC,EAAE;MACxBA,QAAQ,GAAGG,OAAO,CAACC,MAAM,GAAG,CAAC;IAC9B;EACA;AAED;AAACf,EAAA,CA3CQN,MAAM;AAAAsB,EAAA,GAANtB,MAAM;AA6Cf,eAAeuB,OAAO,IAAIJ,aAAa;AAAC,IAAAG,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}